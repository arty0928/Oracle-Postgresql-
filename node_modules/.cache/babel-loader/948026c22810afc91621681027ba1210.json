{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\query-converter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [postgresql, setPostgresql] = useState([]);\n  const [inputValue, setInputValue] = useState([]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setPostgresql(current => {\n      // 여기 if를 수정해서 변환작업 하기\n      if (inputValue.includes(\"what\")) {\n        const word = inputValue.split(' ');\n        return [...current, {\n          value: word[0]\n          /* 치환 혹은 배열로 \n          분리 하여 변환된 문장 조합 */\n\n        }];\n      } else return [...current, {\n        value: inputValue // value: inputValue,\n\n      }];\n    });\n    setInputValue(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"oracle-query\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: event => {\n          setInputValue(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uBCC0\\uD658\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: postgresql.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"37NLFHVVSrzA2aag2FnSYtqxRXw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","postgresql","setPostgresql","inputValue","setInputValue","handleSubmit","event","preventDefault","current","includes","word","split","value","target","map","item"],"sources":["C:/Users/user/query-converter/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const [postgresql, setPostgresql] = useState([]);\n  const [inputValue, setInputValue] = useState([]);\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setPostgresql((current) => { // 여기 if를 수정해서 변환작업 하기\n      if (inputValue.includes(\"what\")) {\n        const word = inputValue.split(' ');\n\n        return [...current, {\n          value: word[0], /* 치환 혹은 배열로 \n          분리 하여 변환된 문장 조합 */\n        },];\n      }\n      else return [...current, {\n        value: inputValue, // value: inputValue,\n      },];\n      \n    });\n\n    setInputValue(\"\");\n    \n  };\n\n  return (\n    <div>\n      <form id=\"oracle-query\" onSubmit={handleSubmit}>\n        <input type=\"text\" value ={inputValue}\n          onChange={(event) => {\n            setInputValue(event.target.value);\n        }} />\n        <button type=\"submit\">변환</button>\n      </form>\n      \n      <ol>{postgresql.map((item) => (\n        <div>\n          <span>{item.value}</span>\n        </div>\n      ))}</ol>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;;EACA,MAAMM,YAAY,GAAIC,KAAD,IAAW;IAC9BA,KAAK,CAACC,cAAN;IACAL,aAAa,CAAEM,OAAD,IAAa;MAAE;MAC3B,IAAIL,UAAU,CAACM,QAAX,CAAoB,MAApB,CAAJ,EAAiC;QAC/B,MAAMC,IAAI,GAAGP,UAAU,CAACQ,KAAX,CAAiB,GAAjB,CAAb;QAEA,OAAO,CAAC,GAAGH,OAAJ,EAAa;UAClBI,KAAK,EAAEF,IAAI,CAAC,CAAD;UAAK;AAC1B;;QAF4B,CAAb,CAAP;MAID,CAPD,MAQK,OAAO,CAAC,GAAGF,OAAJ,EAAa;QACvBI,KAAK,EAAET,UADgB,CACJ;;MADI,CAAb,CAAP;IAIN,CAbY,CAAb;IAeAC,aAAa,CAAC,EAAD,CAAb;EAED,CAnBD;;EAqBA,oBACE;IAAA,wBACE;MAAM,EAAE,EAAC,cAAT;MAAwB,QAAQ,EAAEC,YAAlC;MAAA,wBACE;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAGF,UAA3B;QACE,QAAQ,EAAGG,KAAD,IAAW;UACnBF,aAAa,CAACE,KAAK,CAACO,MAAN,CAAaD,KAAd,CAAb;QACH;MAHD;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eASE;MAAA,UAAKX,UAAU,CAACa,GAAX,CAAgBC,IAAD,iBAClB;QAAA,uBACE;UAAA,UAAOA,IAAI,CAACH;QAAZ;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADG;IAAL;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;GAzCQZ,G;;KAAAA,G;AA2CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}